{
min_dist=10e10
for (centroid in 1:nrow(centroids))
{
distance_to_centroid=sum((centroids[centroid,]-data[i,])^2)
if (distance_to_centroid<=min_dist)
{
cluster[i]=centroid
min_dist=distance_to_centroid
}
}
}
#Initialisation of clusters
centroids<-data[sample.int(nrow(data),K),]
kmeans=function(data,K<-4,stop_crit<-10e-5)
{
#Initialisation of clusters
centroids<-data[sample.int(nrow(data),K),]
current_stop_crit=1000
cluster=rep(0,nrow(data))
converged=F
it=1
while(current_stop_crit>=stop_crit & converged==F)
{
it=it+1
if (current_stop_crit<=stop_crit)
{
converged=T
}
old_centroids=centroids
##Assigning each point to a centroid
for (i in 1:nrow(data))
{
min_dist=10e10
for (centroid in 1:nrow(centroids))
{
distance_to_centroid=sum((centroids[centroid,]-data[i,])^2)
if (distance_to_centroid<=min_dist)
{
cluster[i]=centroid
min_dist=distance_to_centroid
}
}
}
##Assigning each point to a centroid
for (i in 1:nrow(centroids))
{
centroids[i,]=apply(data[cluster==i,],2,mean)
}
current_stop_crit=mean((old_centroids-centroids)^2)
}
return(list(data=data.frame(data,cluster),centroids=centroids))
}
##Assigning each point to a centroid
for (i in 1:nrow(centroids))
break()
it<-1
it=1
kmeans<-function(data,K=4,stop_crit=10e-5)
{
#Initialisation of clusters
centroids<-data[sample.int(nrow(data),K),]
current_stop_crit<-1000
cluster<-rep(0,nrow(data))
converged<-F
it=1
while(current_stop_crit>=stop_crit & converged==F)
{
it=it+1
if (current_stop_crit<=stop_crit)
{
converged=T
}
old_centroids=centroids
##Assigning each point to a centroid
for (i in 1:nrow(data))
{
min_dist=10e10
for (centroid in 1:nrow(centroids))
{
distance_to_centroid=sum((centroids[centroid,]-data[i,])^2)
if (distance_to_centroid<=min_dist)
{
cluster[i]=centroid
min_dist=distance_to_centroid
}
}
}
##Assigning each point to a centroid
for (i in 1:nrow(centroids))
{
centroids[i,]=apply(data[cluster==i,],2,mean)
}
current_stop_crit=mean((old_centroids-centroids)^2)
}
return(list(data=data.frame(data,cluster),centroids=centroids))
}
View(kmeans)
View(kmeans)
View(kmeans)
res<-kmeans(DF[1:2],K=5)
DF<-data.frame(rbind(set1,set2,set3,set4,set5),cluster=as.factor(c(rep(1:5,each=300))))
set5<-mvrnorm(n = 300, c(3,-3), matrix(c(4,0,0,4),2))
DF=data.frame(rbind(set1,set2,set3,set4,set5),cluster=as.factor(c(rep(1:5,each=300))))
set1 <- mvrnorm(n = 300, c(-4,10), matrix(c(1.5,1,1,1.5),2))
#Initialisation of clusters
centroids<-data[sample.int(nrow(data),K),]
DF = data.frame(rbind(set1,set2,set3,set4,set5),cluster=as.factor(c(rep(1:5,each=300))))
set5 = mvrnorm(n = 300, c(3,-3), matrix(c(4,0,0,4),2))
set1 = MASS::mvrnorm(n = 300, c(-4,10), matrix(c(1.5,1,1,1.5),2))
set4 = MASS::mvrnorm(n = 300, c(10,-10), matrix(c(4,0,0,4),2))
set4 = MASS::mvrnorm(n = 300, c(10,-10), matrix(c(4,0,0,4),2))
ggplot(data_plot,aes(x=X1,y=X2,color=as.factor(cluster),size=isCentroid,alpha=isCentroid))+geom_point()
require(MASS)
require(ggplot2)
set.seed(1234)
set1 = MASS::mvrnorm(n = 300, c(-4,10), matrix(c(1.5,1,1,1.5),2))
set2 = MASS::mvrnorm(n = 300, c(5,7), matrix(c(1,2,2,6),2))
set3 = MASS::mvrnorm(n = 300, c(-1,1), matrix(c(4,0,0,4),2))
set4 = MASS::mvrnorm(n = 300, c(10,-10), matrix(c(4,0,0,4),2))
set5 = MASS::mvrnorm(n = 300, c(3,-3), matrix(c(4,0,0,4),2))
DF = data.frame(rbind(set1,set2,set3,set4,set5),cluster=as.factor(c(rep(1:5,each=300))))
ggplot(DF,aes(x=X1,y=X2,color=cluster))+geom_point()
source('~/Documents/R programs/clustering.R')
require(MASS)
library(tm)
library(proxy)
library(dplyr)
library(ggplot2)
library(corrplot)
library(twitteR)
setwd('~/Documents/R programs')
load(file = "rdmTweets-201306.RData")
tweets <- twListToDF(tweets)
load(file = "rdmTweets-201306.RData")
tweets <- twListToDF(tweets)
tweets <- tweets %>%
mutate(text=gsub("(http|https).+$|\\n|&amp|[[:punct:]]","",text),
rowIndex=as.numeric(row.names(.))) %>%
select(text,retweetCount,rowIndex)
docList <- as.list(tweets$text)
doc <- c( "The sky is blue.", "The sun is bright today.",
"The sun in the sky is bright.", "We can see the shining sun, the bright sun." )
corpus <- Corpus( VectorSource(docList) )
length(corpus)
corpus[[1]]
View(docList)
controlList <- list(removePunctuation = TRUE, stopwords = TRUE, tolower = TRUE)
tdm <- TermDocumentMatrix(corpus, control = controlList)
View(tdm)
tf <- as.matrix(tdm)
View(tf)
library(tm)
library(proxy)
library(dplyr)
library(ggplot2)
library(corrplot)
library(twitteR)
library(tm)
library(proxy)
library(dplyr)
library(ggplot2)
library(corrplot)
setwd('~/Documents/R programs')
doc <- c( "The sky is blue.", "The sun is bright today.",
"The sun in the sky is bright.", "We can see the shining sun, the bright sun.",
"The moon is full, the sky full of stars.", "The sky was dark, the stars plentiful and bright.",
"The sun is but a morning star.")
corpus <- Corpus( VectorSource(docList) )
length(corpus)
corpus[[1]]
library(tm)
library(proxy)
library(dplyr)
library(ggplot2)
library(corrplot)
setwd('~/Documents/R programs')
doc <- c( "The sky is blue.", "The sun is bright today.",
"The sun in the sky is bright.", "We can see the shining sun, the bright sun.",
"The moon is full, the sky full of stars.", "The sky was dark, the stars plentiful and bright.",
"The sun is but a morning star.")
corpus <- Corpus( VectorSource(doc) )
length(corpus)
corpus[[1]]
controlList <- list(removePunctuation = TRUE, stopwords = TRUE, tolower = TRUE)
tdm <- TermDocumentMatrix(corpus, control = controlList)
tf <- as.matrix(tdm)
corrplot(tf, method = "number", is.corr = FALSE, cl.pos = "n")
(idf <- log(ncol(tf) / (1 + rowSums(tf != 0) ) ) )
(idf <- diag(idf) )
tf_idf <- crossprod(tf, idf)
colnames(tf_idf) <- rownames(tf)
tf_idf
tf_idf <- tf_idf / sqrt(rowSums(tf_idf^2) )
tf_idf
corrplot(tf_idf, method = "number")
library(tm)
library(proxy)
library(dplyr)
library(ggplot2)
library(corrplot)
setwd('~/Documents/R programs')
doc <- c( "The sky is blue.", "The sun is bright today.",
"The sun in the sky is bright.", "We can see the shining sun, the bright sun.",
"The moon is full, the sky full of stars.", "The sky was dark, the stars plentiful and bright.",
"The sun is but a morning star.")
corpus <- Corpus( VectorSource(doc) )
length(corpus)
corpus[[1]]
controlList <- list(removePunctuation = TRUE, stopwords = TRUE, tolower = TRUE)
tdm <- TermDocumentMatrix(corpus, control = controlList)
tf <- as.matrix(tdm)
corrplot(tf, method = "number", is.corr = FALSE, cl.pos = "n")
(idf <- log(ncol(tf) / (1 + rowSums(tf != 0) ) ) )
(idf <- diag(idf) )
tf_idf <- crossprod(tf, idf)
colnames(tf_idf) <- rownames(tf)
tf_idf
tf_idf <- tf_idf / sqrt(rowSums(tf_idf^2) )
tf_idf
corrplot(tf_idf, method = "number")
library(tm)
library(proxy)
library(dplyr)
library(ggplot2)
library(corrplot)
doc <- c( "The sky is blue.", "The sun is bright today.", "The sun in the sky is bright.", "We can see the shining sun, the bright sun.",
"The moon is full, the sky full of stars.", "The sky was dark, the stars plentiful and bright.", "The sun is but a morning star.")
corpus <- Corpus( VectorSource(doc) )
length(corpus)
corpus[[1]]
controlList <- list(removePunctuation = TRUE, stopwords = TRUE, tolower = TRUE)
tdm <- TermDocumentMatrix(corpus, control = controlList)
tf <- as.matrix(tdm)
corrplot(tf, method = "number", is.corr = FALSE, cl.pos = "n")
(idf <- log(ncol(tf) / (1 + rowSums(tf != 0) ) ) )
(idf <- diag(idf) )
tf_idf <- crossprod(tf, idf)
colnames(tf_idf) <- rownames(tf)
tf_idf <- tf_idf / sqrt(rowSums(tf_idf^2) )
tf_idf
corrplot(tf_idf, method = "number")
library(tm)
library(proxy)
library(dplyr)
library(ggplot2)
library(corrplot)
doc <- c( "The sky is blue.", "The sun is bright today.", "The sun in the sky is bright.", "We can see the shining sun, the bright sun.",
"The moon is full, the sky full of stars.", "The sky was dark, the stars plentiful and bright.", "The sun is but a morning star.")
corpus <- Corpus( VectorSource(doc) )
controlList <- list(removePunctuation = TRUE, stopwords = TRUE, tolower = TRUE)
tf <- as.matrix(TermDocumentMatrix(corpus, control = controlList) )
corrplot(tf, method = "number", is.corr = FALSE, cl.pos = "n")
(idf <- log(ncol(tf) / (1 + rowSums(tf != 0) ) ) )
(idf <- diag(idf) )
tf_idf <- crossprod(tf, idf)
colnames(tf_idf) <- rownames(tf)
tf_idf <- tf_idf / sqrt(rowSums(tf_idf^2) )
tf_idf
corrplot(tf_idf, method = "number")
library(tm)
library(proxy)
library(dplyr)
library(ggplot2)
library(corrplot)
doc <- c( "The sky is blue.", "The sun is bright today.", "The sun in the sky is bright.", "We can see the shining sun, the bright sun.", "The moon is full, the sky full of stars.", "The sky was dark, the stars plentiful and bright.", "The sun is but a morning star.")
corpus <- Corpus( VectorSource(doc) )
controlList <- list(removePunctuation = TRUE, stopwords = TRUE, tolower = TRUE)
tf <- as.matrix(TermDocumentMatrix(corpus, control = controlList) )
corrplot(tf, method = "number", is.corr = FALSE, cl.pos = "n")
(idf <- log(ncol(tf) / (1 + rowSums(tf != 0) ) ) )
idf <- diag(idf)
tf_idf <- crossprod(tf, idf)
colnames(tf_idf) <- rownames(tf)
tf_idf <- tf_idf / sqrt(rowSums(tf_idf^2) )
tf_idf
corrplot(tf_idf, method = "number")
corrplot(tf_idf, method = "number")
library(tm)
library(proxy)
library(dplyr)
library(ggplot2)
library(corrplot)
doc <- c( "The sky is blue.", "The sun is bright today.", "The sun in the sky is bright.", "We can see the shining sun, the bright sun.", "The moon is full, the sky full of stars.", "The sky was dark, the stars plentiful and bright.", "The sun is but a morning star.")
corpus <- Corpus( VectorSource(doc) )
controlList <- list(removePunctuation = TRUE, stopwords = TRUE, tolower = TRUE)
tf <- as.matrix(TermDocumentMatrix(corpus, control = controlList) )
corrplot(tf, method = "number", is.corr = FALSE, cl.pos = "n")
(idf <- log(ncol(tf) / (1 + rowSums(tf != 0) ) ) )
(idf <- diag(idf) )
tf_idf <- crossprod(tf, idf)
colnames(tf_idf) <- rownames(tf)
tf_idf <- tf_idf / sqrt(rowSums(tf_idf^2) )
tf_idf
corrplot(tf_idf, method = "number")
library(tm)
library(proxy)
library(dplyr)
library(ggplot2)
library(corrplot)
print("The dataset: each sentence is one docoment")
doc <- c( "The sky is blue.", "The sun is bright today.", "The sun in the sky is bright.", "We can see the shining sun, the bright sun.", "The moon is full, the sky full of stars.", "The sky was dark, the stars plentiful and bright.", "The sun is but a morning star.")
corpus <- Corpus( VectorSource(doc) )
controlList <- list(removePunctuation = TRUE, stopwords = TRUE, tolower = TRUE)
print("computing the term-frequency matrix: ")
(tf <- as.matrix(TermDocumentMatrix(corpus, control = controlList) ) )
corrplot(tf, method = "number", is.corr = FALSE, cl.pos = "n")
print("computing the idf, and then converting into a diagonal matrix (used later)")
(idf <- log(ncol(tf) / (1 + rowSums(tf != 0) ) ) )
(idf <- diag(idf) )
print("calculating the final tf-idf matrix")
tf_idf <- crossprod(tf, idf)
colnames(tf_idf) <- rownames(tf)
(tf_idf <- tf_idf / sqrt(rowSums(tf_idf^2) ) )
corrplot(tf_idf, method = "number")
